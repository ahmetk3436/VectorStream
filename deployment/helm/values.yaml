# Default values for newmind-ai.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application configuration
app:
  name: newmind-ai
  version: "1.0.0"
  
# Image configuration
image:
  repository: newmind-ai/newmind-ai
  pullPolicy: IfNotPresent
  tag: "latest"

# Service configuration
service:
  type: ClusterIP
  port: 8000
  targetPort: 8000
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: newmind-ai.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: newmind-ai-tls
  #    hosts:
  #      - newmind-ai.local

# Deployment configuration
deployment:
  replicaCount: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity: {}
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  
  # Pod security context
  podSecurityContext:
    fsGroup: 1000

# Environment variables
env:
  # Kafka configuration
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  KAFKA_TOPIC: "newmind-ai-topic"
  KAFKA_GROUP_ID: "newmind-ai-group"
  
  # Qdrant configuration
  QDRANT_HOST: "qdrant"
  QDRANT_PORT: "6333"
  QDRANT_COLLECTION_NAME: "newmind-ai-vectors"
  
  # Application configuration
  LOG_LEVEL: "INFO"
  METRICS_PORT: "9090"
  HEALTH_CHECK_PORT: "8080"

# ConfigMap configuration
configMap:
  enabled: true
  data: {}

# Secret configuration
secret:
  enabled: true
  data: {}

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Vertical Pod Autoscaler
vpa:
  enabled: false
  updateMode: "Off"

# Health checks
healthChecks:
  livenessProbe:
    enabled: true
    httpGet:
      path: /health/live
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /health/ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Persistence
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Kafka dependency configuration
kafka:
  enabled: true
  replicaCount: 1
  auth:
    clientProtocol: plaintext
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT
  controller:
    replicaCount: 1
  broker:
    replicaCount: 1
  kraft:
    enabled: true
  zookeeper:
    enabled: false
  metrics:
    kafka:
      enabled: true
    jmx:
      enabled: true

# Qdrant dependency configuration
qdrant:
  enabled: true
  replicaCount: 1
  image:
    repository: qdrant/qdrant
    tag: "v1.7.0"
  service:
    type: ClusterIP
    port: 6333
  persistence:
    enabled: true
    size: 10Gi
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# Monitoring configuration
monitoring:
  # Prometheus configuration
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 10s
      labels: {}
    rules:
      enabled: true
  
  # Grafana configuration
  grafana:
    enabled: true
    adminPassword: "admin123"
    dashboards:
      enabled: true
      configMapName: "newmind-ai-dashboards"
    datasources:
      enabled: true
    ingress:
      enabled: false
      hosts:
        - grafana.local
  
  # ServiceMonitor for application metrics
  serviceMonitor:
    enabled: true
    namespace: ""
    labels: {}
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    port: metrics

# Network Policies
networkPolicy:
  enabled: false
  ingress:
    enabled: true
    from: []
  egress:
    enabled: true
    to: []

# Pod Security Policy
podSecurityPolicy:
  enabled: false

# RBAC
rbac:
  create: true
  rules: []

# Tests
tests:
  enabled: true
  image:
    repository: busybox
    tag: "1.35"
    pullPolicy: IfNotPresent